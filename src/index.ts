import { config } from 'dotenv'
import { buildServer } from './server'

// Carrega vari√°veis de ambiente
config()

const PORT = parseInt(process.env.PORT || '3001', 10)
const HOST = process.env.HOST || '0.0.0.0'

async function start() {
  try {
    console.log('üöÄ Iniciando servidor Lumi...')
    
    // Valida vari√°veis de ambiente obrigat√≥rias
    if (!process.env.DATABASE_URL) {
      throw new Error('DATABASE_URL √© obrigat√≥rio')
    }
    
    if (!process.env.GROQ_API_KEY) {
      throw new Error('GROQ_API_KEY √© obrigat√≥rio')
    }

    if (!process.env.JWT_SECRET) {
      console.warn('‚ö†Ô∏è  JWT_SECRET n√£o configurado! Definindo chave padr√£o insegura.')
      process.env.JWT_SECRET = 'default-insecure-key-change-in-production'
    }

    // Constr√≥i e inicia o servidor
    const server = await buildServer()
    
    await server.listen({ port: PORT, host: HOST })
    
    console.log(`‚úÖ Servidor Lumi rodando em http://${HOST}:${PORT}`)
    console.log(`üìä Health check: http://${HOST}:${PORT}/health`)
    console.log(`üîå WebSocket: ws://${HOST}:${PORT}/ws`)
    
  } catch (error) {
    console.error('‚ùå Erro ao iniciar servidor:', error)
    process.exit(1)
  }
}

start()
